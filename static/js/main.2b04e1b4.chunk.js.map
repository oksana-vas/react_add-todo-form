{"version":3,"sources":["api/users.ts","services/getUserById.ts","components/UserInfo/UserInfo.tsx","components/TodoInfo/TodoInfo.tsx","components/TodoList/TodoList.tsx","components/NewTodo/NewTodo.tsx","App.tsx","api/todos.ts","index.tsx"],"names":["id","name","username","email","getUserById","userId","users","find","user","UserInfo","className","href","TodoInfo","todo","title","completed","cn","TodoList","todos","map","NewTodo","onAdd","useState","setTitle","titleError","setTitleError","setUserId","userError","setUserIdError","hasErrors","trim","handleSubmit","event","preventDefault","action","method","onSubmit","htmlFor","type","placeholder","value","onChange","target","required","disabled","usersFromServer","onClick","getNewTodoId","Math","max","preparedTodos","App","setTodos","newTodo","currentTodos","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.2b04e1b4.chunk.js","sourcesContent":["export default [\n  {\n    id: 1,\n    name: 'Leanne Graham',\n    username: 'Bret',\n    email: 'Sincere@april.biz',\n  },\n  {\n    id: 2,\n    name: 'Ervin Howell',\n    username: 'Antonette',\n    email: 'Shanna@melissa.tv',\n  },\n  {\n    id: 3,\n    name: 'Clementine Bauch',\n    username: 'Samantha',\n    email: 'Nathan@yesenia.net',\n  },\n  {\n    id: 4,\n    name: 'Patricia Lebsack',\n    username: 'Karianne',\n    email: 'Julianne.OConner@kory.org',\n  },\n  {\n    id: 5,\n    name: 'Chelsey Dietrich',\n    username: 'Kamren',\n    email: 'Lucio_Hettinger@annie.ca',\n  },\n  {\n    id: 6,\n    name: 'Mrs. Dennis Schulist',\n    username: 'Leopoldo_Corkery',\n    email: 'Karley_Dach@jasper.info',\n  },\n  {\n    id: 7,\n    name: 'Kurtis Weissnat',\n    username: 'Elwyn.Skiles',\n    email: 'Telly.Hoeger@billy.biz',\n  },\n  {\n    id: 8,\n    name: 'Nicholas Runolfsdottir V',\n    username: 'Maxime_Nienow',\n    email: 'Sherwood@rosamond.me',\n  },\n  {\n    id: 9,\n    name: 'Glenna Reichert',\n    username: 'Delphine',\n    email: 'Chaim_McDermott@dana.io',\n  },\n  {\n    id: 10,\n    name: 'Clementina DuBuque',\n    username: 'Moriah.Stanton',\n    email: 'Rey.Padberg@karina.biz',\n  },\n];\n","import users from '../api/users';\n\nexport function getUserById(userId: number) {\n  return users.find(user => user.id === userId)\n      || null;\n}\n","import { User } from '../../types/User';\nimport './UserInfo.scss';\n\ntype Props = {\n  user: User,\n};\n\nexport const UserInfo: React.FC<Props> = ({ user }) => {\n  return (\n    <a className=\"UserInfo\" href={`mailto:${user.email}`}>\n      {user.name}\n    </a>\n  );\n};\n","import cn from 'classnames';\nimport { Todo } from '../../types/Todo';\nimport { UserInfo } from '../UserInfo';\nimport './TodoInfo.scss';\n\ntype Props = {\n  todo: Todo,\n};\n\nexport const TodoInfo: React.FC<Props> = ({\n  todo: {\n    id,\n    title,\n    completed = false,\n    user,\n  },\n}) => {\n  return (\n    <article\n      data-id={id}\n      className={cn('TodoInfo', {\n        'TodoInfo--completed': completed,\n      })}\n    >\n      <h2 className=\"TodoInfo__title\">\n        {title}\n      </h2>\n\n      {user && (\n        <UserInfo user={user} />\n      )}\n    </article>\n  );\n};\n","import React from 'react';\nimport { Todo } from '../../types/Todo';\nimport { TodoInfo } from '../TodoInfo';\n\ntype Props = {\n  todos: Todo[],\n};\n\nexport const TodoList: React.FC<Props> = ({ todos }) => {\n  return (\n    <section className=\"TodoList\">\n      {todos.map(todo => (\n        <TodoInfo\n          todo={todo}\n          key={todo.id}\n        />\n      ))}\n    </section>\n  );\n};\n","import React, { useState } from 'react';\nimport './NewTodo.scss';\n\nimport { Todo } from '../../types/Todo';\nimport usersFromServer from '../../api/users';\nimport { getUserById } from '../../services/getUserById';\n\ntype Props = {\n  onAdd: (todo: Todo) => void;\n};\n\nexport const NewTodo: React.FC<Props> = ({ onAdd }) => {\n  const [title, setTitle] = useState('');\n  const [titleError, setTitleError] = useState('');\n  const [userId, setUserId] = useState(0);\n  const [userError, setUserIdError] = useState('');\n\n  const reset = () => {\n    setTitle('');\n    setUserId(0);\n  };\n\n  const hasErrors = !title.trim() || !userId;\n\n  const handleSubmit = (event: React.FormEvent) => {\n    event.preventDefault();\n\n    if (!title) {\n      setTitleError('Please enter a title');\n    }\n\n    if (!userId) {\n      setUserIdError('Please choose a user');\n    }\n\n    if (hasErrors) {\n      return;\n    }\n\n    onAdd({\n      id: 0,\n      title,\n      completed: false,\n      userId,\n      user: getUserById(userId),\n    });\n\n    reset();\n  };\n\n  const handleTitle = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setTitle(event.target.value);\n    setTitleError('');\n  };\n\n  const handleUser = (event: React.ChangeEvent<HTMLSelectElement>) => {\n    setUserId(+event.target.value);\n    setUserIdError('');\n  };\n\n  return (\n    <form\n      action=\"/api/todos\"\n      method=\"POST\"\n      onSubmit={handleSubmit}\n    >\n      <div className=\"field\">\n        <label htmlFor=\"title\">Title:</label>\n        <input\n          type=\"text\"\n          data-cy=\"titleInput\"\n          name=\"title\"\n          id=\"title\"\n          placeholder=\"Enter a title\"\n          value={title}\n          onChange={handleTitle}\n          required\n        />\n        <span className=\"error\">\n          {titleError}\n        </span>\n      </div>\n\n      <div className=\"field\">\n        <label htmlFor=\"user\">User: </label>\n        <select\n          data-cy=\"userSelect\"\n          value={userId}\n          onChange={handleUser}\n          required\n        >\n          <option\n            value=\"0\"\n            disabled\n          >\n            Choose a user\n          </option>\n\n          {usersFromServer.map(user => (\n            <option\n              key={user.id}\n              value={user.id}\n            >\n              {user.name}\n            </option>\n          ))}\n        </select>\n\n        <span className=\"error\">\n          {userError}\n        </span>\n      </div>\n\n      <button\n        type=\"submit\"\n        data-cy=\"submitButton\"\n        onClick={handleSubmit}\n      >\n        Add\n      </button>\n    </form>\n  );\n};\n","import { useState } from 'react';\nimport './App.scss';\n\nimport todosFromServer from './api/todos';\nimport { getUserById } from './services/getUserById';\nimport { TodoList } from './components/TodoList';\nimport { NewTodo } from './components/NewTodo/NewTodo';\nimport { Todo } from './types/Todo';\n\nfunction getNewTodoId(todos: Todo[]) {\n  const maxId = Math.max(\n    ...todos.map(todo => todo.id),\n  );\n\n  return maxId + 1;\n}\n\nconst preparedTodos: Todo[] = todosFromServer.map(todo => ({\n  ...todo,\n  user: getUserById(todo.userId),\n}));\n\nexport const App = () => {\n  const [todos, setTodos] = useState<Todo[]>(preparedTodos);\n\n  const addTodo = (todo: Todo) => {\n    const newTodo = {\n      ...todo,\n      id: getNewTodoId(todos),\n    };\n\n    setTodos(currentTodos => [...currentTodos, newTodo]);\n  };\n\n  return (\n    <div className=\"App\">\n      <h1>Add todo form</h1>\n\n      <NewTodo onAdd={addTodo} />\n\n      <TodoList todos={todos} />\n    </div>\n  );\n};\n","export default [\n  {\n    id: 1,\n    title: 'delectus aut autem',\n    completed: true,\n    userId: 1,\n  },\n  {\n    id: 15,\n    title: 'some other todo',\n    completed: false,\n    userId: 1,\n  },\n  {\n    id: 2,\n    title: 'quis ut nam facilis et officia qui',\n    completed: false,\n    userId: 4,\n  },\n];\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}